rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    function hasRole(role) {
      return isAuthenticated() &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == role;
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow write: if isOwner(userId) || hasRole('admin');
    }

    // Stores collection
    match /stores/{storeId} {
      allow read: if isAuthenticated();
      allow write: if hasRole('admin') || hasRole('manager');
    }

    // Menu items
    match /menu_items/{itemId} {
      allow read: if true; // Public can view menu
      allow write: if hasRole('admin') || hasRole('manager');
    }

    // Orders
    match /orders/{orderId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if hasRole('admin') || hasRole('manager') || hasRole('staff');
      allow delete: if hasRole('admin');
    }

    // Customers
    match /customers/{customerId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
    }

    // Inventory
    match /inventory/{itemId} {
      allow read: if isAuthenticated();
      allow write: if hasRole('admin') || hasRole('manager');
    }

    // Feedback
    match /feedback/{feedbackId} {
      allow read: if isAuthenticated();
      allow create: if true; // Anyone can submit feedback
      allow update: if hasRole('admin') || hasRole('manager');
      allow delete: if hasRole('admin');
    }

    // Employees
    match /employees/{employeeId} {
      allow read: if isAuthenticated();
      allow write: if hasRole('admin') || hasRole('manager');
    }
  }
}