rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function hasRole(role) {
      return isAuthenticated() &&
        firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.role == role;
    }

    // Allow authenticated users to read any file
    match /{allPaths=**} {
      allow read: if true; // Public can view images
    }

    // Menu item images
    match /menu-items/{imageId} {
      allow write: if hasRole('admin') || hasRole('manager');
    }

    // Store images
    match /stores/{storeId}/{imageId} {
      allow write: if hasRole('admin') || hasRole('manager');
    }

    // User avatars
    match /users/{userId}/{imageId} {
      allow write: if request.auth.uid == userId;
    }

    // Order attachments
    match /orders/{orderId}/{fileId} {
      allow write: if isAuthenticated();
    }
  }
}